[tool.poetry]
name = "itabashi-minutes"
version = "1.0.0"
description = "板橋区議会会議録クローラー & 分析システム / Itabashi Ward Council Minutes Crawler & Analysis System"
authors = ["Your Name <your.email@example.com>"]
readme = "docs/README-ja.md"
packages = [
    {include = "crawler"},
    {include = "ingest"},
]
license = "MIT"
homepage = "https://github.com/your-username/itabashi-minutes"
repository = "https://github.com/your-username/itabashi-minutes"
documentation = "https://github.com/your-username/itabashi-minutes/blob/main/docs/README-ja.md"
keywords = ["council", "minutes", "crawler", "japanese", "nlp", "politics"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Researchers",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: Japanese",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Text Processing :: Linguistic",
]

[tool.poetry.dependencies]
python = ">=3.9,!=3.9.7,<4.0"
requests = "^2.31.0"
beautifulsoup4 = "^4.12.2"
lxml = "^4.9.3"
pandas = "^2.0.3"
numpy = "^1.24.3"
scikit-learn = "^1.3.0"
matplotlib = "^3.7.2"
seaborn = "^0.12.2"
jupyter = "^1.0.0"
mecab-python3 = "^1.0.8"
wordcloud = "^1.9.2"
jsonschema = "^4.23.0"
python-dotenv = "^1.0.0"
pypdf = "^6.0.0"
fastapi = "^0.110.0"
uvicorn = { version = "^0.29.0", extras = ["standard"] }
pydantic = "^2.9"

[tool.poetry.group.app]
optional = true

[tool.poetry.group.app.dependencies]
streamlit = ">=1.28,<2.0"

[tool.poetry.group.dev.dependencies]
pytest = "^8.0.0"
pytest-cov = "^4.1.0"
flake8 = "^6.0.0"
black = "^23.7.0"
mypy = "^1.5.1"
bandit = "^1.7.5"
safety = "^2.3.5"
pre-commit = "^3.3.3"
ipykernel = "^6.25.1"
nbconvert = "^7.7.3"
responses = "^0.25.3"

pytest-mock = "^3.12.0"
freezegun = "^1.4.0"            # 日付依存があれば

[tool.poetry.group.analysis.dependencies]
plotly = "^5.15.0"
dash = "^2.12.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
itabashi-crawler = "crawler.cli:main"
itabashi-normalizer = "ingest.text_normalizer:main"
catalog-load = "catalog.load:main"
api-serve = "api.main:serve"
mcp-server = "mcp.server:main"
ui-serve = "app.ui_launcher:main"

[tool.black]
line-length = 88
target-version = ['py39', 'py310', 'py311']

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "MeCab",
    "wordcloud",
    "matplotlib.*",
    "seaborn",
    "sklearn.*",
    "bs4",
    "pandas.*",
    "numpy.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --disable-warnings"
testpaths = [
    "tests",
]
python_files = [
    "test_*.py",
    "*_test.py",
]
python_classes = [
    "Test*",
]
python_functions = [
    "test_*",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.bandit]
exclude_dirs = ["tests", "docs"]
skips = ["B101", "B601"]  # Skip assert_used and shell_injection_paramiko

[tool.coverage.run]
source = ["crawler", "ingest"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/.venv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "docs/",
    "build/",
    "dist/",
    ".eggs/",
    "*.egg-info/",
    ".venv/",
    "venv/",
]

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88
